# kubeApiServer:
#   enabled: true
#   ## If your API endpoint address is not reachable (as in AKS) you can replace it with the kubernetes service
#   relabelings: 
#   - sourceLabels:
#     - __meta_kubernetes_namespace
#     - __meta_kubernetes_service_name
#     - __meta_kubernetes_endpoint_port_name
#     action: keep
#     regex: default;kubernetes;https
#   - targetLabel: __address__
#     replacement: kubernetes.default.svc:443

kubeControllerManager:
  enabled: false

kubeScheduler:
  enabled: false

prometheus:
  ingress:
    enabled: true
    annotations:
        kubernetes.io/ingress.class: nginx
        certmanager.k8s.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/auth-url: "https://monitor.helm-notifier.com/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://monitor.helm-notifier.com/oauth2/start"
    tls:
      - secretName: letsencrypt
        hosts:
          - monitor.helm-notifier.com
    hosts:
      - monitor.helm-notifier.com
    paths:
      - /prometheus/?(.*)
  prometheusSpec:
    externalUrl: https://monitor.helm-notifier.com/prometheus/
    ruleNamespaceSelector:
      any: true
      matchNames: []
    serviceMonitorNamespaceSelector:
      any: true
      matchNames: []
alertmanager:
  ingress:
    enabled: true
    annotations:
        kubernetes.io/ingress.class: nginx
        certmanager.k8s.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/auth-url: "https://monitor.helm-notifier.com/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://monitor.helm-notifier.com/oauth2/start"
    tls:
      - secretName: letsencrypt
        hosts:
          - monitor.helm-notifier.com
    hosts:
      - monitor.helm-notifier.com
    paths:
      - /alertmanager/?(.*)
  alertmanagerSpec:
    externalUrl: https://monitor.helm-notifier.com/alertmanager/
  config:
    route:
      group_by: [alertname, job]
      receiver: default
grafana:
  sidecar:
    dashboards:
      searchNamespace: ALL
  ingress:
    enabled: true
    annotations:
        kubernetes.io/ingress.class: nginx
        certmanager.k8s.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/auth-url: "https://monitor.helm-notifier.com/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://monitor.helm-notifier.com/oauth2/start"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          set_by_lua $user 'return ngx.decode_base64(string.gsub(ngx.var.cookie__oauth2_proxy,"(%w+)|.+", "%1"))';
          proxy_set_header X-WEBAUTH-USER $user;
    hosts:
      - monitor.helm-notifier.com
    path: /grafana/?(.*)
    tls:
      - secretName: letsencrypt
        hosts:
          - monitor.helm-notifier.com
  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s/grafana/"
    users:
      auto_assign_org: true
      auto_assign_org_role: Editor
    auth:
      disable_login_form: true
      disable_signout_menu: true
    auth.proxy:
      enabled: true
  image:
    tag: 6.2.4